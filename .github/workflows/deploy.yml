name: Build, Deploy and Restart Spring Boot App

on:
  push:
    branches:
      - main

jobs:
  deploy-to-server:
    runs-on: self-hosted
    environment: study-secrets

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

      - name: Rename Artifact for Consistent Deployment
        run: mv target/*.jar target/app.jar
        shell: bash

      - name: Copy Artifact to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "target/app.jar"
          target: "/home/${{ secrets.USERNAME }}/"
          overwrite: true

      - name: Deploy and Restart Application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            APP_HOME="/home/${{ secrets.USERNAME }}"
            SOURCE_PATH=$(find $APP_HOME -name "app.jar" | head -n 1)
            
            if [ -n "$SOURCE_PATH" ]; then
              echo "Artefato encontrado em $SOURCE_PATH. Movendo para $APP_HOME/app.jar"
              mv "$SOURCE_PATH" "$APP_HOME/app.jar"
            else
              echo "ERRO: Nenhum app.jar encontrado no servidor."
              exit 1
            fi

            echo "SPRING_DATA_MONGODB_URI=${{ secrets.MONGO_URI }}" > $APP_HOME/prod.env
            echo "AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }}" >> $APP_HOME/prod.env
            echo "AWS_S3_SECRET_KEY=${{ secrets.AWS_S3_SECRET_KEY }}" >> $APP_HOME/prod.env
            sudo chown ${{ secrets.USERNAME }}:${{ secrets.USERNAME }} $APP_HOME/app.jar $APP_HOME/prod.env
            
            echo "Reiniciando o servi√ßo spring-app..."
            sudo systemctl restart spring-app.service
